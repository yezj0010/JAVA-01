使用sb -u http://localhost:8088/api/hello -c 10 -n 1000000
运行一段时间停掉

========================================================================================================
再次使用jmap heap 12724命令查看
Attaching to process ID 12724, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 25.231-b11

using thread-local object allocation.
Garbage-First (G1) GC with 13 thread(s)

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 1073741824 (1024.0MB)
   NewSize                  = 1363144 (1.2999954223632812MB)
   MaxNewSize               = 643825664 (614.0MB)
   OldSize                  = 5452592 (5.1999969482421875MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 21807104 (20.796875MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 1048576 (1.0MB)

Heap Usage:
G1 Heap:
   regions  = 1024
   capacity = 1073741824 (1024.0MB)
   used     = 542887128 (517.7375106811523MB)
   free     = 530854696 (506.26248931884766MB)
   50.560303777456284% used
G1 Young Generation:
Eden Space:
   regions  = 495
   capacity = 675282944 (644.0MB)  略微超过了MaxNewSize
   used     = 519045120 (495.0MB)
   free     = 156237824 (149.0MB)
   76.86335403726709% used
Survivor Space:
   regions  = 1
   capacity = 1048576 (1.0MB)  减小
   used     = 1048576 (1.0MB)
   free     = 0 (0.0MB)
   100.0% used
G1 Old Generation:
   regions  = 23
   capacity = 397410304 (379.0MB)   减小
   used     = 22793432 (21.737510681152344MB)
   free     = 374616872 (357.26248931884766MB)
   5.735490944895077% used

20193 interned Strings occupying 2530680 bytes.
========================================================================================================
使用图形化工具，可以看到整体使用的堆量在增加，但是是波动进行的，gc一次，堆使用量下降，但很快又上去。
========================================================================================================
使用jstat -gcutil 12724 500命令监控，以下为片段
  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT
  0.00 100.00  11.11   4.13  94.07  91.90     14    0.066     0    0.000    0.066
  0.00 100.00  34.90   4.13  94.07  91.90     14    0.066     0    0.000    0.066
  0.00 100.00  57.75   4.13  94.07  91.90     14    0.066     0    0.000    0.066
  0.00 100.00  81.38   4.13  94.07  91.90     14    0.066     0    0.000    0.066
  0.00 100.00   9.56   4.13  94.07  91.90     15    0.069     0    0.000    0.069
  0.00 100.00  32.13   4.13  94.07  91.90     15    0.069     0    0.000    0.069
  0.00 100.00  55.49   4.13  94.07  91.90     15    0.069     0    0.000    0.069
  0.00 100.00  79.15   4.13  94.07  91.90     15    0.069     0    0.000    0.069
  0.00 100.00   7.52   4.06  94.07  91.90     16    0.073     0    0.000    0.073
  0.00 100.00  31.03   4.06  94.07  91.90     16    0.073     0    0.000    0.073
  0.00 100.00  54.70   4.06  94.07  91.90     16    0.073     0    0.000    0.073
  0.00 100.00  78.21   4.06  94.07  91.90     16    0.073     0    0.000    0.073
  0.00 100.00   7.04   4.20  94.08  91.90     17    0.076     0    0.000    0.076
  0.00 100.00  30.52   4.20  94.08  91.90     17    0.076     0    0.000    0.076
  可以看到，一直都是young gc,没有触发full gc。
  s1使用率一直是100%，eden使用率到了快满了就触发young gc,然后降下来
========================================================================================================
  使用jstat -gc 12724 500查看，以下为片段
C:\Users\yezj>jstat -gc 12724 500
 S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT
 0.0   1024.0  0.0   1024.0 659456.0 472064.0  388096.0   21516.0   45232.0 42579.7 5808.0 5338.7     32    0.112   0      0.000    0.112
 0.0   1024.0  0.0   1024.0 659456.0 472064.0  388096.0   21516.0   45232.0 42579.7 5808.0 5338.7     32    0.112   0      0.000    0.112
省略...
 0.0   1024.0  0.0   1024.0 659456.0 401408.0  388096.0   22221.5   45232.0 42680.6 5808.0 5339.3     68    0.169   0      0.000    0.169
 0.0   1024.0  0.0   1024.0 659456.0 529408.0  388096.0   22221.5   45232.0 42680.6 5808.0 5339.3     68    0.169   0      0.000    0.169
 0.0   1024.0  0.0   1024.0 659456.0 34816.0   388096.0   22269.2   45232.0 42681.0 5808.0 5339.3     69    0.171   0      0.000    0.171
 0.0   1024.0  0.0   1024.0 659456.0 163840.0  388096.0   22269.2   45232.0 42681.0 5808.0 5339.3     69    0.171   0      0.000    0.171
 0.0   1024.0  0.0   1024.0 659456.0 290816.0  388096.0   22269.2   45232.0 42681.0 5808.0 5339.3     69    0.171   0      0.000    0.171
 0.0   1024.0  0.0   1024.0 659456.0 418816.0  388096.0   22269.2   45232.0 42681.0 5808.0 5339.3     69    0.171   0      0.000    0.171
 0.0   1024.0  0.0   1024.0 659456.0 539648.0  388096.0   22269.2   45232.0 42681.0 5808.0 5339.3     69    0.171   0      0.000    0.171
 0.0   1024.0  0.0   1024.0 659456.0 39936.0   388096.0   22205.8   45232.0 42682.0 5808.0 5339.3     70    0.173   0      0.000    0.173
 0.0   1024.0  0.0   1024.0 659456.0 167936.0  388096.0   22205.8   45232.0 42682.0 5808.0 5339.3     70    0.173   0      0.000    0.173
 0.0   1024.0  0.0   1024.0 659456.0 295936.0  388096.0   22205.8   45232.0 42682.0 5808.0 5339.3     70    0.173   0      0.000    0.173
 0.0   1024.0  0.0   1024.0 659456.0 425984.0  388096.0   22205.8   45232.0 42682.0 5808.0 5339.3     70    0.173   0      0.000    0.173
 0.0   1024.0  0.0   1024.0 659456.0 556032.0  388096.0   22205.8   45232.0 42682.0 5808.0 5339.3     70    0.173   0      0.000    0.173
 0.0   1024.0  0.0   1024.0 659456.0 54272.0   388096.0   22259.2   45232.0 42685.9 5808.0 5339.3     71    0.174   0      0.000    0.174
 0.0   1024.0  0.0   1024.0 659456.0 174080.0  388096.0   22259.2   45232.0 42685.9 5808.0 5339.3     71    0.174   0      0.000    0.174

压测之前数据如下：该数据在《1.G1...txt》中
E:\>jstat -gc 12724 1000
 S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC       MU      CCSC   CCSU      YGC   YGCT   FGC     FGCT     GCT
 0.0   25600.0  0.0   25600.0 179200.0 58368.0   843776.0    3281.6   34224.0 32632.0 4528.0 4214.8      6    0.032   0      0.000    0.032
 0.0   25600.0  0.0   25600.0 179200.0 58368.0   843776.0    3281.6   34224.0 32632.0 4528.0 4214.8      6    0.032   0      0.000    0.032

可以更清晰的看到与压测前的变化：
s1容量缩小，
eden容量和使用量都增加。
老年代容量缩小，使用量增加。  youg gc ,一些年轻代的数据移动到了老年代
metaspace空间容量和使用量有增加。
类压缩空间容量、使用量有增加。
压测到一定程度之后，eden容量达到659456就不再增加了，换算下为644MB，与jmap -heap值一样,略微超过MaxNewSize的值。


疑问：

1.压测后，为什么新生代区大小超过了最大大小
答：猜想，压测后，新生代大小为645,MaxNewSize大小为641，刚好多5%。
后面添加参数设置最大堆内存-XX:MaxNewSize=500m，压测后，新生代大小为524+1=525M，也刚好多5%
可能是jvm内部机制的原因，使得新生代极限大小比最大新生代内存容量多5%，具体还需要看jvm内部源码实现。
但新生代和老年代加起来还是等于最大堆内存。

2.压测后，为什么没有进行full gc，是否调小Xmx Xms可以触发full gc
答：没有进行full gc，是因为没有触发fgc的条件。young gc 和minxed gc可以很好的处理内存中的垃圾。
如果调小最大堆内存，只给几十兆，是可以看到full gc的发生。
而且内存调很低之后，经过压测，有的时候新生代区不会达到最大值的1.05，可能eden变成2M，然后一直疯狂ygc。eden一直从0~2M变化，old区容量也在上下变化。
如下：-Xmx20m -Xms20m
S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC       MU     CCSC   CCSU     YGC    YGCT    FGC    FGCT     GCT
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    13992.5   38016.0 36011.2 4992.0 4524.5   1265    1.275   6      0.195    1.470
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14120.0   38016.0 36011.2 4992.0 4524.5   1420    1.403   6      0.195    1.598
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14316.0   38016.0 36019.2 4992.0 4524.5   1572    1.529   6      0.195    1.724
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14430.5   38016.0 36019.2 4992.0 4524.5   1726    1.656   6      0.195    1.851
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    13907.0   38016.0 36021.5 4992.0 4524.5   1880    1.783   6      0.195    1.978
 0.0   1024.0  0.0   1024.0  2048.0   1024.0   17408.0    13025.0   38016.0 36025.3 4992.0 4524.5   2033    1.909   6      0.195    2.104
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14210.0   38016.0 36025.3 4992.0 4524.5   2187    2.037   6      0.195    2.232
 0.0   1024.0  0.0   1024.0  2048.0   1024.0   17408.0    14342.0   38016.0 36025.7 4992.0 4524.5   2341    2.164   6      0.195    2.360
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14502.0   38016.0 36025.7 4992.0 4524.5   2487    2.303   6      0.195    2.497
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    13918.4   38016.0 36025.7 4992.0 4524.5   2642    2.430   6      0.195    2.625
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14053.5   38016.0 36025.7 4992.0 4524.5   2798    2.559   6      0.195    2.754
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14208.0   38016.0 36026.5 4992.0 4524.5   2951    2.688   6      0.195    2.883
 0.0   1024.0  0.0   1024.0  2048.0   1024.0   17408.0    13345.5   38016.0 36026.5 4992.0 4524.5   3105    2.818   6      0.195    3.012
 0.0   1024.0  0.0   1024.0  2048.0    0.0     17408.0    14503.5   38016.0 36026.9 4992.0 4524.5   3260    2.948   6      0.195    3.143
